{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","title","summary","poster","year","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","class","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4RA2BeA,MAxBf,YAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,KAAKC,EAAQ,EAARA,OAC7C,OACA,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKJ,EAAQK,IAAKP,EAAOA,MAAOA,IACrC,sBAAKK,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,OAAd,SAAsBF,IACtB,oBAAIE,UAAU,SAAd,SAAwBD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OAAiB,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QAE7D,oBAAGL,UAAU,gBAAb,UAA8BJ,EAAQU,MAAM,EAAE,KAA9C,gBC4CGC,G,kNAjDbC,MAAM,CACJC,WAAU,EACVC,OAAO,I,EAQTC,U,sBAAW,8BAAAC,EAAA,sEAE0BC,IAAMC,IAAI,yDAFpC,gBAEUJ,EAFV,EAEFK,KAAMA,KAAML,OAEnB,EAAKM,SAAS,CAACN,SAAOD,WAAU,IAJvB,2C,4KAQTQ,KAAKN,Y,qIAEE,IAAD,EACoBM,KAAKT,MAAxBC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACE,yBAASQ,MAAM,YAAf,SACGT,EACG,qBAAKS,MAAM,SAAX,SACE,sBAAMA,MAAM,cAAZ,yBAEF,qBAAKA,MAAM,SAAX,SACGR,EAAOP,KAAI,SAAAgB,GAAK,OACf,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVI,KAAMqB,EAAMrB,KACZH,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAMzB,e,GAhCX2B,IAAMC,YCAxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,a","file":"static/js/main.3861d8ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./movie.css\";\r\nfunction Movie({id ,title ,summary, poster, year,genres}){\r\n    return (\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}></img>\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <h5 className=\"year\">{year}</h5>\r\n            <ul className=\"genres\">{genres.map((genre,index) => <li key={index} className=\"genres_genre\">{genre}</li>)}</ul>\r\n            \r\n            <p className=\"movie_summary\">{summary.slice(0,140)}...</p>\r\n                   </div>\r\n    </div>\r\n    );\r\n\r\n}\r\nMovie.propTypes={\r\n    id: PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    poster:PropTypes.string.isRequired,\r\n    year:PropTypes.number.isRequired,\r\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  state={\n    isLoading:true,\n    movies:[]\n  };\n  /* \n    axios에서 받을 떄까지 js한테 기다리라고 해야함\n    => async ,await 이용\n    async => \"js야 너 이거 기다려야함\"\n    await => \"뭘 기다려? (여기선)axios를 기다려\"\n  */\n  getMovies= async () =>{\n    //이건 ??.data.data.movies 하는것과 같음.\n    const {data:{data:{movies}}}=await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    //console.log(movies);\n    this.setState({movies,isLoading:false});\n  };\n\n  async componentDidMount(){\n    this.getMovies();\n  }\n  render(){\n    const {isLoading, movies}=this.state;\n    return (\n      <section class=\"container\">\n        {isLoading\n          ? <div class=\"loader\">\n              <span class=\"loader_text\">Loading..</span>\n            </div>\n          : <div class=\"movies\">\n              {movies.map(movie => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n            ))}\n          </div>\n        }\n              \n          \n      </section>\n    )\n  }  \n }       \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(<App />,document.getElementById('potato'));\n//react application은 하나의 component만을 rendering\n//그래서 모든것은 <App />안에 들어가야 함. \n\n/* \n  <App />\n  이런걸 component라고 부름 (react는 component)\n  component가 데이터를 보여줌 \n  component는 html를 반환하는 함수 . \n  jsx는 유일한 react 개념. \n  <App /> <- 이게 component사용하는 방법. \n  App이렇게하면 react를 사용하는 것이 아님. \n  */\n"],"sourceRoot":""}